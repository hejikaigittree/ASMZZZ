<UserControl x:Name="userControl" 
             x:Class="LFAOIRecipe.Page_CutOutDie"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LFAOIRecipe"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"      
             mc:Ignorable="d"             
             Background="White"
             MinWidth="400">
    <UserControl.Resources>
        <ResourceDictionary >
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <DockPanel x:Name="dockPanel">
        <StackPanel DockPanel.Dock="Top">
            <materialDesign:Card Margin="5,5,5,0">
                <StackPanel>
                    <TextBlock Text="{Binding DisplayName}"
                           FontSize="16"
                           Margin="10"
                           Foreground="DarkBlue"/>
                    <TextBlock Margin="10,0,10,10"
                       Text="【加载全局数据，显示路径，显示参考Die图像】"
                       TextWrapping="Wrap">
                    </TextBlock>
                </StackPanel>
            </materialDesign:Card>
            <DockPanel x:Name="dockPanel_Frame" Margin="0,20,0,0">
                <Button Content="加载全局数据"
                        ToolTip="参考格式：【产品目录】\Models\Reference"
                        Margin="5,-1,0,0"
                        Command="{Binding LoadReferenceCommand}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                <TextBlock Text="{Binding GoldenModelParameter.ReferencePath}" 
                       Margin="10,0,0,0"
                       TextWrapping="Wrap"
                       VerticalAlignment="Center" FontSize="12" MaxWidth="570" HorizontalAlignment="Left"/>
                <!--
                <Button Content="选择全局数据文件夹"
                        ToolTip="参考格式：【产品目录】\Models\Reference"
                    Margin="0,-1,5,0"
                    Command="{Binding SelectReferenceCommand}" VerticalAlignment="Center" HorizontalAlignment="Right"/>-->
            </DockPanel>
            <DockPanel x:Name="dockPanel_IC_Image" Margin="0,20,0,0">
                <Button x:Name="button_IC_Image" Content="加载图像"
                    Width="100"
                    Command="{Binding LoadImageCommand}" Margin="5,0,0,0" IsEnabled="False"/>
                <TextBlock Text="{Binding GoldenModelParameter.ImagePath }" IsEnabled="False"
                       Margin="10,0,0,0"
                       TextWrapping="Wrap"
                       VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Left"/>
            </DockPanel>
            <DockPanel x:Name="dockPanel_IC_TrainSet" Margin="0,20,0,0">
                <Button x:Name="button_IC_TrainSet" Content="选择训练图像"
                        Command="{Binding SelectedTrainningImageDirectoryCommand}" Margin="5,0,0,0" IsEnabled="False"/>
                <TextBlock Text="{Binding GoldenModelParameter.TrainningImagesDirectory }" IsEnabled="False"
                       Margin="10,0,0,0"
                       TextWrapping="Wrap"
                       VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Left"/>
            </DockPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10">
                <TextBlock Text="显示通道图"
                       VerticalAlignment="Center" Margin="10,0,0,0"/>
                <ComboBox x:Name="comboBox_addMatchRegion" Width="70"
                          ItemsSource="{Binding ChannelNames}"
                          DisplayMemberPath="Name"
                          Margin="10,0,0,0"
                          materialDesign:ComboBoxAssist.ClassicMode="true"
                          SelectedIndex="{Binding ImageIndex, Mode=TwoWay}">
                </ComboBox>
                <materialDesign:Chip  Content="{Binding GoldenModelParameter.UserRegionForCutOutIndex}"  Icon="Die" Margin="20,0,0,0" Width="60" FontSize="14" />
            </StackPanel>
            <!--
            <StackPanel Orientation="Horizontal"
                    Margin="0,20,0,0">
                <TextBlock Text="所有Die区域"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0"/>

                <Button Content="添加区域" IsEnabled="False"
                    Margin="20,0,0,0"
                    Command="{Binding AddUserRegionCommand}"/>
                <Button Content="删除区域" IsEnabled="False"
                    Margin="20,0,0,0"
                    Command="{Binding RemoveUserRegionCommand}"/>
                <Button Content="修改区域"  Margin="20,0,0,0" Height="Auto" ToolTip="区域修改完，鼠标右键确认！"
                        IsEnabled="False"
                        Command="{Binding ModifyRegionCommand}"/>
            </StackPanel>
            -->
        </StackPanel>
        <materialDesign:Card Margin="5,10,5,5">
            <StackPanel>
                <DataGrid Margin="0" IsReadOnly="True"
                  ItemsSource="{Binding DieUserRegions}" AlternatingRowBackground="#D1DFE7">
                    <DataGrid.Columns>
                        <!--
                <DataGridCheckBoxColumn Header="选择"
                                        Binding="{Binding IsSelected}" 
                                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"/>
                -->
                        <materialDesign:MaterialDataGridTextColumn Header="序号" 
                                                           Binding="{Binding Index}" 
                                                           IsReadOnly="True"/>
                        <DataGridTemplateColumn  Header="启用">
                            <DataGridTemplateColumn.CellTemplate >
                                <DataTemplate >
                                    <CheckBox IsChecked="{Binding IsEnable,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"         
                                      Command="{Binding DataContext.UserRegionEnableChangedCommand, ElementName=userControl}"
                                      CommandParameter="{Binding}"
                                      Style="{StaticResource MaterialDesignCheckBox}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <materialDesign:MaterialDataGridTextColumn Header="形状" 
                                                           Binding="{Binding RegionType}" 
                                                           IsReadOnly="True"/>
                        <materialDesign:MaterialDataGridTextColumn Header="参数" 
                                                           Binding="{Binding}" 
                                                           IsReadOnly="True"/>

                        <!--<DataGridCheckBoxColumn Header="是否启用"
                                        Binding="{Binding IsEnable}" 
                                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style>
                            <EventSetter Event="CheckBox.Checked" Handler="CheckBox_Checked"/>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>-->
                    </DataGrid.Columns>
                </DataGrid>
                <!--
            <StackPanel x:Name="stackPanel_forCutOut" Margin="0,20,0,0" Orientation="Horizontal">
                <TextBlock Text="选择上面其中一个区域用于制作模板    序号"
                       VerticalAlignment="Center" Margin="10,0,0,0"/>
                <ComboBox Width="50" 
                      materialDesign:ComboBoxAssist.ClassicMode="true"                     
                      HorizontalContentAlignment="Center"
                      ItemsSource="{Binding DieUserRegions}"
                      DisplayMemberPath="Index"
                      SelectedItem="{Binding SelectedUserRegion}"/>
                <Button Content="裁  剪" 
                    Width="80"
                    Margin="20,0,0,0"
                    Command="{Binding CutOutCommand}"/>

                <TextBlock Text="当前用于裁剪的区域序号为"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0,0,0"/>
                <TextBlock Text="{Binding UserRegionForCutOut.Index}"
                           Margin="5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" >
                </TextBlock>
            </StackPanel>
            -->
            </StackPanel>
        </materialDesign:Card>
    </DockPanel>

</UserControl>
