<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AggregateExceptionDeserializationFailure" xml:space="preserve">
    <value>The serialization stream contains no inner exceptions.</value>
    <comment>异常集合反序列化异常。</comment>
  </data>
  <data name="AmbiguousMatchField" xml:space="preserve">
    <value>More than one field is found with the specified name and matching the specified binding constraints.</value>
    <comment>找到多个有指定名称且与指定绑定约束匹配的字段。</comment>
  </data>
  <data name="AmbiguousMatchMethod" xml:space="preserve">
    <value>More than one method is found with the specified name and matching the specified binding constraints.</value>
    <comment>找到多个有指定名称且与指定绑定约束匹配的方法。</comment>
  </data>
  <data name="AmbiguousMatchProperty" xml:space="preserve">
    <value>More than one property is found with the specified name and matching the specified binding constraints.</value>
    <comment>找到多个有指定名称且与指定绑定约束匹配的属性。</comment>
  </data>
  <data name="ArgumentImplementIComparable" xml:space="preserve">
    <value>At least one object must implement IComparable.</value>
    <comment>必须至少有一个对象实现 IComparable。</comment>
  </data>
  <data name="ArgumentMinMaxValue" xml:space="preserve">
    <value>'{0}' cannot be greater than '{1}'.</value>
    <comment>最小值大于最大值。</comment>
  </data>
  <data name="ArgumentMustBePositive" xml:space="preserve">
    <value>Parameter values must be greater than zero.</value>
    <comment>参数小于等于零。</comment>
  </data>
  <data name="ArgumentNegative" xml:space="preserve">
    <value>Parameter values can not be negative.</value>
    <comment>参数小于零。</comment>
  </data>
  <data name="ArgumentOutOfRange" xml:space="preserve">
    <value>Parameter values was out of range.</value>
    <comment>参数超出范围。</comment>
  </data>
  <data name="ArgumentOutOfRangeBetween" xml:space="preserve">
    <value>Parameter values must be between {1} and {2}.</value>
    <comment>参数超出范围。</comment>
  </data>
  <data name="ArgumentWrongType" xml:space="preserve">
    <value>The value '{1}' of parameter '{0}' is not of type '{2}'.</value>
    <comment>参数值不是特定类型。</comment>
  </data>
  <data name="ArgumentWrongType_Specific" xml:space="preserve">
    <value>The value of parameter '{0}' is not valid type.</value>
    <comment>参数值不是有效类型。</comment>
  </data>
  <data name="ArrayEmpty" xml:space="preserve">
    <value>Array may not be empty.</value>
    <comment>数组为空。</comment>
  </data>
  <data name="ArrayLengthsDiffer" xml:space="preserve">
    <value>Array lengths must be the same.</value>
    <comment>数组长度必须相同。</comment>
  </data>
  <data name="ArrayNonZeroLowerBound" xml:space="preserve">
    <value>The lower bound of target array must be zero.</value>
    <comment>数组的下限必须为 0。</comment>
  </data>
  <data name="ArrayRankMultiDimNotSupported" xml:space="preserve">
    <value>Only single-dimensional arrays are supported.</value>
    <comment>多维数组不被支持。</comment>
  </data>
  <data name="ArrayTooSmall" xml:space="preserve">
    <value>Destination array is not long enough, check array index and length.</value>
    <comment>目标数组太小。</comment>
  </data>
  <data name="BaseConvertNegativeValue" xml:space="preserve">
    <value>String cannot contain a minus sign if the base is not 10.</value>
    <comment>如果基不为 10，则此字符串不能包含减号。</comment>
  </data>
  <data name="BindTargetField" xml:space="preserve">
    <value>Cannot bind to the target field because its type or security transparency is not compatible with that of the delegate type.</value>
    <comment>绑定到目标字段时出错。</comment>
  </data>
  <data name="BindTargetMethod" xml:space="preserve">
    <value>Cannot bind to the target method because its signature or security transparency is not compatible with that of the delegate type.</value>
    <comment>绑定到目标方法时出错。</comment>
  </data>
  <data name="BindTargetProperty" xml:space="preserve">
    <value>Cannot bind to the target property because its signature or security transparency is not compatible with that of the delegate type.</value>
    <comment>绑定到目标属性时出错。</comment>
  </data>
  <data name="BindTargetPropertyNoGet" xml:space="preserve">
    <value>Cannot bind to the target property because no get accessor exists.</value>
    <comment>绑定到目标属性时出错。</comment>
  </data>
  <data name="BindTargetPropertyNoSet" xml:space="preserve">
    <value>Cannot bind to the target property because no set accessor exists.</value>
    <comment>绑定到目标属性时出错。</comment>
  </data>
  <data name="CannotCastNullToValueType" xml:space="preserve">
    <value>Null object cannot be converted to a value type.</value>
    <comment>空对象不能转换为值类型。</comment>
  </data>
  <data name="CannotInferGenericArguments" xml:space="preserve">
    <value>Can not infer type argument of {0} from parameters.</value>
    <comment>无效的泛型参数推断。</comment>
  </data>
  <data name="ComparerFailed" xml:space="preserve">
    <value>Failed to compare two elements in the array.</value>
    <comment>比较数组元素失败。</comment>
  </data>
  <data name="ConflictingAcceptAction" xml:space="preserve">
    <value>Accept action is conflicted with Reject action.</value>
    <comment>冲突的接受动作。</comment>
  </data>
  <data name="ConflictingRejectAction" xml:space="preserve">
    <value>Reject action is conflicted with Accept action.</value>
    <comment>冲突的拒绝动作。</comment>
  </data>
  <data name="ConvertInvalidValue" xml:space="preserve">
    <value>'{0}' is not a valid value for '{1}'.</value>
    <comment>转换无效。</comment>
  </data>
  <data name="DelegateCompatible" xml:space="preserve">
    <value>Delegate type not compatible with {0}.</value>
    <comment>委托的类型不兼容。</comment>
  </data>
  <data name="EnumFailedVersion" xml:space="preserve">
    <value>Collection was modified; enumeration operation may not execute.</value>
    <comment>无法执行枚举操作。</comment>
  </data>
  <data name="EnumTypeDoesNotMatch" xml:space="preserve">
    <value>The argument type '{0}' is not the same as the enum type '{1}'.</value>
    <comment>枚举参数类型不匹配。</comment>
  </data>
  <data name="EnumValueNotFound" xml:space="preserve">
    <value>Requested value '{1}' was not found in enum type '{0}'.</value>
    <comment>未识别的枚举值。</comment>
  </data>
  <data name="ExtraJunkAtEnd" xml:space="preserve">
    <value>Additional non-parsable characters are at the end of the string.</value>
    <comment>字符串的末尾有其他无法分析的字符。</comment>
  </data>
  <data name="FixedSizeCollection" xml:space="preserve">
    <value>Collection was of a fixed size.</value>
    <comment>集合是固定大小的。</comment>
  </data>
  <data name="InnerExceptionNull" xml:space="preserve">
    <value>An element of innerExceptions was null.</value>
    <comment>内部异常之一为 null。</comment>
  </data>
  <data name="InvalidArrayType" xml:space="preserve">
    <value>Target array type is not compatible with the type of items in the collection.</value>
    <comment>目标数组类型与集合中项的类型不兼容。</comment>
  </data>
  <data name="InvalidBase" xml:space="preserve">
    <value>Base is not between 2 and 36.</value>
    <comment>无效的基。</comment>
  </data>
  <data name="InvalidCacheOptions" xml:space="preserve">
    <value>Can not find constructor matchs options in type '{0}'.</value>
    <comment>缓冲池选项无效。</comment>
  </data>
  <data name="InvalidCacheType" xml:space="preserve">
    <value>Invalid cache type '{0}'.</value>
    <comment>缓冲池类型无效。</comment>
  </data>
  <data name="InvalidCacheType_ICache" xml:space="preserve">
    <value>Invalid cache type '{0}', did not implement ICache{TKey, TValue}.</value>
    <comment>缓冲池类型无效-未实现 ICache 接口。</comment>
  </data>
  <data name="InvalidCastFromTo" xml:space="preserve">
    <value>Invalid cast from '{0}' to '{1}'.</value>
    <comment>一种类型不能转换为另一种类型。</comment>
  </data>
  <data name="InvalidDictionaryThreshold" xml:space="preserve">
    <value>The specified threshold for creating dictionary is out of range.</value>
    <comment>用于创建字典的阈值超出范围。</comment>
  </data>
  <data name="InvalidLexerContext" xml:space="preserve">
    <value>Invalid lexer context '{0}'.</value>
    <comment>无效的词法分析上下文。</comment>
  </data>
  <data name="InvalidOffsetLength" xml:space="preserve">
    <value>Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.</value>
    <comment>偏移量和长度超出界限。</comment>
  </data>
  <data name="InvalidSourceRange" xml:space="preserve">
    <value>From {0} to {1} is not a valid source range.</value>
    <comment>不是有效的源文件范围。</comment>
  </data>
  <data name="ItemNotExist" xml:space="preserve">
    <value>The specified item does not exist.</value>
    <comment>指定的项不存在。</comment>
  </data>
  <data name="KeyDuplicate" xml:space="preserve">
    <value>An item with the same key has already been added.</value>
    <comment>键重复。</comment>
  </data>
  <data name="KeyNotFound" xml:space="preserve">
    <value>Key '{0}' is not exists.</value>
    <comment>指定的键不存在。</comment>
  </data>
  <data name="MethodNotSupported" xml:space="preserve">
    <value>Specified method is not supported.</value>
    <comment>方法不支持。</comment>
  </data>
  <data name="MustBeDelegate" xml:space="preserve">
    <value>Type must derive from Delegate.</value>
    <comment>类型必须从委托派生。</comment>
  </data>
  <data name="MustBeEnum" xml:space="preserve">
    <value>Type '{0}' must be an Enum.</value>
    <comment>必须是枚举。</comment>
  </data>
  <data name="MustContainEnumInfo" xml:space="preserve">
    <value>Must specify valid information for parsing in the string.</value>
    <comment>必须包含枚举信息。</comment>
  </data>
  <data name="NoParsibleDigits" xml:space="preserve">
    <value>Could not find any recognizable digits.</value>
    <comment>未能找到任何可识别的数字。</comment>
  </data>
  <data name="NotGenericMethodDefinition" xml:space="preserve">
    <value>{0} is not a GenericMethodDefinition. {1} may only be called on a method for which MethodBase.IsGenericMethodDefinition is true.</value>
    <comment>不表示泛型方法定义。</comment>
  </data>
  <data name="ObjectDisposed" xml:space="preserve">
    <value>The object has been disposed.</value>
    <comment>对象已释放资源。</comment>
  </data>
  <data name="OverflowByte" xml:space="preserve">
    <value>Value was either too large or too small for a Byte.</value>
    <comment>值对于 Byte 太大或太小。</comment>
  </data>
  <data name="OverflowInt16" xml:space="preserve">
    <value>Value was either too large or too small for an Int16.</value>
    <comment>值对于 Int16 太大或太小。</comment>
  </data>
  <data name="OverflowInt32" xml:space="preserve">
    <value>Value was either too large or too small for an Int32.</value>
    <comment>值对于 Int32 太大或太小。</comment>
  </data>
  <data name="OverflowInt64" xml:space="preserve">
    <value>Value was either too large or too small for an Int64.</value>
    <comment>值对于 Int64 太大或太小。</comment>
  </data>
  <data name="OverflowSByte" xml:space="preserve">
    <value>Value was either too large or too small for a SByte.</value>
    <comment>值对于 SByte 太大或太小。</comment>
  </data>
  <data name="OverflowUInt16" xml:space="preserve">
    <value>Value was either too large or too small for a UInt16.</value>
    <comment>值对于 UInt16 太大或太小。</comment>
  </data>
  <data name="OverflowUInt32" xml:space="preserve">
    <value>Value was either too large or too small for a UInt32.</value>
    <comment>值对于 UInt32 太大或太小。</comment>
  </data>
  <data name="OverflowUInt64" xml:space="preserve">
    <value>Value was either too large or too small for a UInt64.</value>
    <comment>值对于 UInt64 太大或太小。</comment>
  </data>
  <data name="ProcessorMismatch" xml:space="preserve">
    <value>Method processor identified '{1}' of type '{0}', mismatch with requested static or instance.</value>
    <comment>方法处理器不匹配。</comment>
  </data>
  <data name="ProcessorMixed" xml:space="preserve">
    <value>Existing static and instance method in method processors identified '{1}' of type '{0}'.</value>
    <comment>方法处理器中混杂着静态和实例方法。</comment>
  </data>
  <data name="ProcessorNotFound" xml:space="preserve">
    <value>Can not find method processor identified '{1}' of type '{0}'.</value>
    <comment>找不到方法处理器。</comment>
  </data>
  <data name="ProcessorNotFound_Type" xml:space="preserve">
    <value>Can not find method processor for type '{0}'.</value>
    <comment>特定类型的方法处理器未能找到。</comment>
  </data>
  <data name="ReadOnlyCollection" xml:space="preserve">
    <value>Collection is read-only.</value>
    <comment>集合是只读的。</comment>
  </data>
  <data name="ReversedArgument" xml:space="preserve">
    <value>The parameter '{0}' and '{1}' in reverse order.</value>
    <comment>参数顺序颠倒。</comment>
  </data>
  <data name="SameParameterName" xml:space="preserve">
    <value>Two parameters can not have same name.</value>
    <comment>参数名相同。</comment>
  </data>
  <data name="SourceReaderClosed" xml:space="preserve">
    <value>Cannot read from a closed SourceReader.</value>
    <comment>不能从关闭的 SourceReader 中读取。</comment>
  </data>
  <data name="StringEmpty" xml:space="preserve">
    <value>Expecting non-empty string for '{0}' parameter.</value>
    <comment>参数需要非空的字符串。</comment>
  </data>
  <data name="StringWhiteSpace" xml:space="preserve">
    <value>Expecting non-whitespace string for '{0}' parameter.</value>
    <comment>参数需要非空白的字符串。</comment>
  </data>
  <data name="TextReaderClosed" xml:space="preserve">
    <value>Cannot read from a closed TextReader.</value>
    <comment>不能从关闭的 TextReader 中读取。</comment>
  </data>
  <data name="UnboundGenParam" xml:space="preserve">
    <value>Late bound operations cannot be performed on types or methods for which ContainssGenericParameters is true.</value>
    <comment>不能是开放式泛型类型。</comment>
  </data>
  <data name="UnrecognizedToken" xml:space="preserve">
    <value>Unrecognized token "{0}".</value>
    <comment>未识别的词法单元异常。</comment>
  </data>
</root>